{"version":3,"sources":["assets/Script/Main.js"],"names":["cc","Class","Component","properties","OreNumber","MaxOreNumber","Time","Hook","type","OreArea","OreData","JsonAsset","Ore","Prefab","GameOverUI","ScoreController","onLoad","manager","director","getCollisionManager","enabled","start","scorer","getComponent","loadLevel","startTimer","update","dt","num","Math","round","random","json","length","data","generateOres","ore","instantiate","resources","load","SpriteAtlas","err","atlas","spriteFrame","getSpriteFrame","res","score","Sprite","console","log","y","node","height","x","width","addChild","_GamePauseAminationCallBack","game","pause","showGameOver","active","GameOver","stopTimer","finished","callFunc","action","sequence","scaleTo","gameover","Money","MaxScore","setMaxScore","canNext","setGameOverText","LevelUp","setLevel","setMemMoney","runAction","Next","resume","loadScene","timer","setInterval","updateTime","clearInterval"],"mappings":"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","sourceRoot":"/","sourcesContent":["/*\n * @Author: czqczqzzzzzz(czq)\n * @Email: tenchenzhengqing@qq.com\n * @Date: 2023-05-29 16:25:36\n * @LastEditors: 陈正清MacPro\n * @LastEditTime: 2023-06-04 22:46:02\n * @FilePath: /goldminer-demo/assets/Script/Main.js\n * @Description: 游戏主要代码 包括倒计时 游戏过关、结束等相关逻辑\n * \n * Copyright (c) by czqczqzzzzzz(czq), All Rights Reserved. \n */\n\n// Learn cc.Class:\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        OreNumber: 0,\n        MaxOreNumber: 20,\n        Time: 60,\n\n        Hook: {\n            default: null,\n            type: cc.Component,\n        },\n        OreArea: {\n            default: null,\n            type: cc.Component\n        },\n        OreData: {\n            default: null,\n            type: cc.JsonAsset\n        },\n        Ore: {\n            default: null,\n            type: cc.Prefab\n        },\n\n        GameOverUI: {\n            default: null,\n            type: cc.Component\n        },\n        ScoreController: {\n            default: null,\n            type: cc.Component\n        }\n\n\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        var manager = cc.director.getCollisionManager();//获取碰撞检测系统\n        manager.enabled = true;//默认碰撞检测系统是禁用的，需要手动开启碰撞检测系统\n        // manager.enabledDebugDraw = true;//开启后可在debug中显示碰撞区域        \n    },\n\n\n\n    start() {\n        this.scorer = this.ScoreController.getComponent('Score')\n        this.scorer.loadLevel()\n        this.startTimer()\n    },\n\n    update(dt) {\n        if (this.OreNumber < this.MaxOreNumber) {\n            let num = Math.round(Math.random() * (this.OreData.json.length - 1))\n            let data = this.OreData.json[num]\n            this.generateOres(data)\n        }\n    },\n\n    generateOres(data) {\n        let ore = cc.instantiate(this.Ore)\n        cc.resources.load('Atlas/level-sheet', cc.SpriteAtlas, function (err, atlas) {\n            if (!err) {\n                let spriteFrame = atlas.getSpriteFrame(data.res)\n                ore.getComponent('Ore').score = data.score\n                ore.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n            } else {\n                console.log(err)\n            }\n        });//更换图片外观\n\n        ore.y = Math.random() * this.OreArea.node.height\n        ore.x = Math.random() * this.OreArea.node.width\n\n        this.OreArea.node.addChild(ore)\n        this.OreNumber++\n    },\n\n    _GamePauseAminationCallBack() {\n        cc.game.pause();\n    },\n\n    showGameOver() {\n        this.GameOverUI.node.active = true\n    },\n\n    GameOver() {\n        this.stopTimer()\n\n        // this.showGameOver()\n        // cc.game.pause()\n\n        //显示弹出框\n        let finished = cc.callFunc(this._GamePauseAminationCallBack, this);\n        let action = cc.sequence(cc.scaleTo(0.3, 1, 1), finished);\n\n        // action.easing(cc.easeBounceOut(0.3));\n        var gameover = this.GameOverUI.getComponent('GameOver')\n        if (this.scorer.Money > this.scorer.MaxScore) {\n            this.scorer.setMaxScore()\n        }\n        if (this.scorer.canNext()) {\n            gameover.setGameOverText(`恭喜你，通过本关！\\n你的得分是${this.scorer.Money}\\n当前最高得分为${this.scorer.MaxScore}`)\n            this.scorer.LevelUp()\n\n        } else {\n            gameover.setGameOverText('时间到！游戏结束')\n            this.scorer.setLevel(1)\n            this.scorer.setMemMoney(0)\n        }\n\n\n        this.GameOverUI.node.runAction(action);\n    },\n\n\n\n    Next() {\n        // GameOverUI.active=false\n        // this.init()\n        cc.game.resume()\n        // clearInterval(this.timer)\n\n        cc.director.loadScene('Game')\n\n    },\n\n\n    startTimer() {\n        this.timer = setInterval(() => {\n            this.Time--\n            this.scorer.updateTime(this.Time)\n\n            if (this.Time < 1) {\n                this.GameOver()\n            }\n\n        }, 1000)\n    },\n\n    stopTimer() {\n        clearInterval(this.timer)\n    }\n\n\n});\n"]}